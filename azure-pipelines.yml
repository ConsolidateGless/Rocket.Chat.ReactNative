trigger:
  branches:
    include:
    - azure-pipelines

pool:
  vmImage: 'macOS-10.15'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.16.1'
  displayName: 'Install Node.js'

- script: yarn install
  displayName: 'Install dependencies'

- script: npm run android-build-release
  displayName: 'Android | Bundle and build'

# PASST SO WENN NICHT SIGNED!
- script: mv android/app/build/outputs/apk/release/app-release-unsigned.apk app-release.apk
  displayName: 'Android | Postbuild'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'my-upload-key.keystore'
  displayName: 'Android | Download keystore file'

- task: AndroidSigning@3
  inputs:
    apkFiles: 'app-release.apk'
    apksign: true # Optional
    apksignerKeystoreFile: 'my-upload-key.keystore'
    apksignerKeystorePassword: '$(KEYSTORE_PASSWORD)'
    apksignerKeystoreAlias: 'my-key-alias'
    apksignerKeyPassword: '$(KEYSTORE_PASSWORD)'
  displayName: 'Android | Signing release APK'

# Copy to Gless server
- task: FtpUpload@2
  inputs:
    credentialsOption: 'inputs'
    serverUrl: '$(FTP_SERVER)'
    username: '$(FTP_USER)'
    password: '$(FTP_PASSWORD)'
    rootDirectory: '.'
    filePatterns: 'app-release.apk'
    remoteDirectory: '/downloads/android/'
    enableUtf8: true
    clean: false
    cleanContents: false
    preservePaths: true
    trustSSL: true
  displayName: Android |Â Copy APK to Gless server'